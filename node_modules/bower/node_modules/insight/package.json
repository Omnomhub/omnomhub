{
  "name": "insight",
  "version": "0.3.1",
  "description": "Understand how your tool is being used by anonymously reporting usage metrics to Google Analytics",
  "keywords": [
    "npm",
    "package",
    "stats",
    "google",
    "analytics",
    "track",
    "metrics"
  ],
  "homepage": "https://github.com/yeoman/insight",
  "bugs": {
    "url": "https://github.com/yeoman/insight/issues"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "main": "lib/insight.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/yeoman/insight.git"
  },
  "scripts": {
    "test": "mocha test/test-*.js"
  },
  "dependencies": {
    "chalk": "~0.4.0",
    "request": "~2.27.0",
    "configstore": "~0.2.1",
    "async": "~0.2.9",
    "inquirer": "~0.4.0",
    "object-assign": "~0.1.2",
    "lodash.debounce": "~2.4.1"
  },
  "devDependencies": {
    "mocha": "*",
    "sinon": "*"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "readme": "# Insight [![Build Status](https://secure.travis-ci.org/yeoman/insight.png?branch=master)](http://travis-ci.org/yeoman/insight)\n\nUnderstand how your tool is being used by anonymously reporting usage metrics to [Google Analytics](http://www.google.com/analytics/)\nor [Yandex.Metrica](http://metrica.yandex.com/)\n\n*This module uses the [newly released Universal Analytics API](http://analytics.blogspot.com/2013/03/expanding-universal-analytics-into.html) from Google Analytics*\n\n\n## Analytics dashboard example\n\nDisplaying metrics from [Yeoman](http://yeoman.io) which makes use of Insight.\n\n![analytics screenshot](https://raw.github.com/yeoman/insight/master/screenshot.png)\n\n\n## Example usage\n\n*Google Analytics*\n\n```js\nvar Insight = require('insight');\nvar pkg = require('./package.json');\n\nvar insight = new Insight({\n\t// Google Analytics tracking code\n\ttrackingCode: 'UA-XXXXXXXX-X',\n\tpackageName: pkg.name,\n\tpackageVersion: pkg.version\n});\n\n// ask for permission the first time\nif (insight.optOut === undefined) {\n\treturn insight.askPermission();\n}\n\ninsight.track('foo', 'bar');\n// recorded in Analytics as `/foo/bar`\n```\n\n*Yandex.Metrica*\n\n```js\nvar Insight = require('insight');\nvar pkg = require('./package.json');\n\nvar insight = new Insight({\n\t// Yandex.Metrica counter id\n\ttrackingCode: 'XXXXXXXXX'\n\ttrackingProvider: 'yandex',\n\tpackageName: pkg.name,\n\tpackageVersion: pkg.version\n});\n\n// ask for permission the first time\nif (insight.optOut === undefined) {\n\treturn insight.askPermission();\n}\n\ninsight.track('foo', 'bar');\n// recorded in Yandex.Metrica as `http://<package-name>.insight/foo/bar`\n```\n\nor a [live example](https://github.com/yeoman/yeoman)\n\n## Documentation\n\n\n### Insight(settings)\n\n#### trackingCode\n\nType: `string`  \n**Required**\n\nYour Google Analytics [trackingCode](https://support.google.com/analytics/bin/answer.py?hl=en&answer=1008080) or\nYandex.Metrica [counter id](http://help.yandex.com/metrika/?id=1121963).\n\n\n#### trackingProvider\n\nType: `string`  \nDefault: `'google'`\n\nTracking provider to use  \nPossible values are `'google'` or `'yandex'`\n\n\n#### packageName\n\nType: `string`  \n**Required**\n\nRequires you to also specify `packageVersion`\n\n\n#### packageVersion\n\nType: `string`  \nDefault: `'0.0.0'`\n\nRequires you to also specify `packageName`\n\n#### config\n\nType: `object`  \nDefault: An instance of [`configstore`](https://github.com/yeoman/configstore)\n\nIf you want to use your own configuration mechanism instead of the default\n`configstore`-based one, you can provide an object that has to implement two\nsynchronous methods:\n\n- `get(key)`\n- `set(key, value)`\n\n\n### Instance methods\n\n\n#### .track(keyword, [keyword, ...])\n\nAccepts keywords which ends up as a path in Analytics.\n\n`.track('init', 'backbone')` becomes `/init/backbone`\n\n\n#### .askPermission([message, callback])\n\nAsks the user for permission to track and sets the `optOut` property. You can also choose to set this manually.\n\n![askPermission screenshot](https://raw.github.com/yeoman/insight/master/screenshot-askpermission.png)\n\nOptionally supply your own `message` and `callback`. The callback will be called with the arguments `error` and `optOut` when the prompt is done, and is useful for when you want to continue the execution while the prompt is running.\n\n\n#### .optOut\n\nReturns a boolean whether the user has opted out of tracking. Should preferably only be set by a user action, eg. a prompt.\n\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php) and copyright Google\n",
  "readmeFilename": "readme.md",
  "_id": "insight@0.3.1",
  "_shasum": "1a14f32c06115c0850338c38a253d707b611d448",
  "_from": "insight@~0.3.0",
  "_resolved": "https://registry.npmjs.org/insight/-/insight-0.3.1.tgz"
}
