{
  "name": "gulp-uglify",
  "description": "Minify files with UglifyJS.",
  "version": "0.2.1",
  "author": {
    "name": "Terin Stock",
    "email": "terinjokes@gmail.com"
  },
  "dependencies": {
    "deepmerge": "~0.2.7",
    "gulp-util": "~2.2.14",
    "through2": "~0.4.0",
    "uglify-js": "~2.4.6",
    "vinyl": "~0.2.3"
  },
  "devDependencies": {
    "tape": "~2.4.2"
  },
  "engines": {
    "node": ">= 0.9"
  },
  "homepage": "http://terinjokes.github.io/gulp-uglify/",
  "keywords": [
    "gulpplugin"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/terinjokes/gulp-uglify.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "readme": "[![Build Status](https://travis-ci.org/terinjokes/gulp-uglify.png?branch=master)](https://travis-ci.org/terinjokes/gulp-uglify)\n\n## Information\n\n<table>\n<tr>\n<td>Package</td><td>gulp-uglify</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Minify files with UglifyJS.</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>≥ 0.9</td>\n</tr>\n</table>\n\n## Usage\n\n```javascript\nvar uglify = require('gulp-uglify');\n\ngulp.task('compress', function() {\n  gulp.src('lib/*.js')\n    .pipe(uglify({outSourceMap: true}))\n    .pipe(gulp.dest('dist'))\n});\n```\n\n## Options\n\n- `mangle`\n\n\tPass `false` to skip mangling names.\n\n- `output`\n\n\tPass an object if you wish to specify additional [output\n\toptions](http://lisperator.net/uglifyjs/codegen). The defaults are\n\toptimized for best compression.\n\n- `compress`\n\n\tPass an object to specify custom [compressor\n\toptions](http://lisperator.net/uglifyjs/compress). Pass `false` to skip\n\tcompression completely.\n\n- `preserveComments`\n\n\tA convenience option for `options.output.comments`. Defaults to preserving no\n\tcomments.\n\n\t- `all`\n\t\t\n\t\tPreserve all comments in code blocks\n\n\t- `some`\n\n\t\tPreserve comments that start with a bang (`!`) or include a Closure\n\t\tCompiler directive (`@preserve`, `@license`, `@cc_on`)\n\n\t- `function`\n\n\t\tSpecify your own comment preservation function. You will be passed the\n\t\tcurrent node and the current comment and are expected to return either\n\t\t`true` or `false`.\n\nYou can also pass the `uglify` function any of the options [listed\nhere](https://github.com/mishoo/UglifyJS2#the-simple-way) to modify\nUglifyJS's behavior.\n\n\n### Source Maps\n\nYou can have UglifyJS’s generated source maps emitted on the stream by passing\n`true` for the `outSourceMap` option. The file object’s path will be based on\nthe input file’s, with ‘.map’ appended.\n\nInput source maps are no supported by this plugin at this time.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/terinjokes/gulp-uglify/issues"
  },
  "_id": "gulp-uglify@0.2.1",
  "_shasum": "34f13ecb16c60d86fd84e2093823e62ff72f2ece",
  "_from": "gulp-uglify@^0.2.1",
  "_resolved": "https://registry.npmjs.org/gulp-uglify/-/gulp-uglify-0.2.1.tgz"
}
